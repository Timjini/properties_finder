version: '3.8'

services:
  app:
    build: .
    container_name: ${PROPERTIES_API_CONTAINER}
    entrypoint: ["/usr/src/app/entrypoint.sh"]
    volumes:
      - .:/usr/src/app
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      RAILS_ENV: ${RAILS_ENV}
      DATABASE_URL: postgres://${PSQL_USER}:${PSQL_PASSWORD}@postgres:5432/${PSQL_DATABASE}
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  sidekiq:
    build: .
    container_name: sidekiq
    command: bundle exec sidekiq
    volumes:
      - .:/usr/src/app
    depends_on:
      - app
      - redis
    environment:
      RAILS_ENV: ${RAILS_ENV}
      DATABASE_URL: postgres://${PSQL_USER}:${PSQL_PASSWORD}@postgres:5432/${PSQL_DATABASE}
      REDIS_URL: redis://redis:6379/0
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    container_name: ${PSQL_DB_HOST}
    image: postgres:latest
    environment:
      POSTGRES_DB: ${PSQL_DATABASE}
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PSQL_USER}", "-d", "${PSQL_DATABASE}"]
      interval: 10s
      retries: 5
    networks:
      - app-network

  pgadmin:
    container_name: ${PGADMIN_HOST}
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
