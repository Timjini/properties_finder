# syntax = docker/dockerfile:1

# Define Ruby version
ARG RUBY_VERSION=3.1.2
FROM ruby:$RUBY_VERSION-slim as base

# Set working directory
WORKDIR /rails

# Environment variables
ENV RAILS_ENV=production \
    BUNDLE_DEPLOYMENT=1 \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development test" \
    BUNDLE_JOBS=4 \
    BUNDLE_RETRY=3

# Install necessary system dependencies
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential curl git libvips pkg-config && \
    rm -rf /var/lib/apt/lists/*

# Build Stage
FROM base as build

# Copy gem dependencies
COPY Gemfile Gemfile.lock ./
RUN bundle install && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}/ruby/*/cache" "${BUNDLE_PATH}/ruby/*/bundler/gems/*/.git" && \
    bundle exec bootsnap precompile --gemfile

# Copy application source
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Final Stage
FROM base

# Install runtime dependencies
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y libsqlite3-0 libvips && \
    rm -rf /var/lib/apt/lists/*

# Copy built gems and application code
COPY --from=build /usr/local/bundle /usr/local/bundle
COPY --from=build /rails /rails

# Create and use a non-root user
RUN useradd -m rails && \
    chown -R rails:rails /rails
USER rails

# Entry point for database preparation
ENTRYPOINT ["./bin/docker-entrypoint"]

# Expose the application port
EXPOSE 3000

# Start the Rails API server
CMD ["./bin/rails", "server", "-b", "0.0.0.0"]
